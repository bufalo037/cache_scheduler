===============================================================================
===============================================================================
									Costea Mihai
		
===============================================================================
===============================================================================

The program is made of 4 .java files:

Process.java
	It contains a public abstract class from which all 7 needed for 
implementation will be extended. It contains a result field, a name field and a 
field that has a string used to figure out what kind of process it is from
the exterior. It contains the get result method which is only used when the 
process result must be calculated (for example, if the process is already in 
 the cache, the calculation is no longer needed). The equals method was 
overwritten, for details check the javadoc. 

===============================================================================

Scheduler.java 
	It is an abstract class from which the 3 presented schedulers extend in the
exercise. There is nothing special about it, it effectively receives all the read
information as input and writes in the output file because of the information 
it was given.

===============================================================================

Cache.java 
	It is an abstract class from which the 2 classes that implement the cache
features presented in the exercise derive. It does the same thing through the 
add method, which is different depending on the chosen cache. 
But the idea of adding is the same:
1. Firstly, the respective process is searched in the cache and, if it is, it 
is returned. Afterwards, the information is extracted through the getResult get
from the process. 
2. If it's not, the following element will be introduced in the cache depending
on the chosen cache.

===============================================================================

IO.java
	This is the class responsible with the reading of data from the file. In 
this class we also have the main procedure that will create, based on the read
data through the "io" object, the cache and the respective schedule. Afterwards,
all the information is "passed" to the scheduler and the output file will be
written through the run method mentioned above.  
===============================================================================
===============================================================================